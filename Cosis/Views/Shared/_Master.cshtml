@using Cosis.Models
@model Cosis.Models.Entities.ThongTinDoanhNghiep
@{
    FormCosisContext context = new FormCosisContext();
   /* TinhTp getTinh(string idTinh){
        return context.TinhTp.Find(idTinh);
    }

    QuanHuyen getHuyen(string idHuyen)
    {
        return context.QuanHuyen.Find(idHuyen);
    }

    PhuongXa getXa(string idXa)
    {
        return context.PhuongXa.Find(idXa);
    }
    */
    List<NganhKinhDoanh> getNganhKinhDoanh(string mast1, string mast2){
        return context.NganhKinhDoanh.Where(x => x.MaSoThue == mast1 && x.MaSoThue2 == mast2).ToList();
    }

    NganhHoatDongKinhDoanh getNganhHoatDongKinhDoanh(string ma){
        return context.NganhHoatDongKinhDoanh.Where(x=>x.MaNganh == ma).FirstOrDefault();
    }
}
<div id="ThongTinDoanhNghiepGroup" class="form-group">
          <div class="row">
            <label class="lb-info"><b>1. Tên doanh nghiệp/HTX: </b></label>
            <input type="text" value="@Model.TenDoanhNghiep" name="Master.Ten" class="infoma" />
          </div>
          <div class="adress">
            <label for=""><b>2. Địa chỉ doanh nghiệp: </b></label>
            <div class="adress-detail">
              <div class="row">
                <label class="lb-info">Tỉnh/TP trực thuộc TW: </label>
                <select name="Master.MaTinhTp" id="city" class="infoma">
                    <option value="" disabled>--- Chọn Tỉnh/TP ---</option>
                </select>
              </div>
              <div class="row">
                <label class="lb-info"
                  >Huyện/quận <i>(thị xã, TP thuộc tỉnh)</i>:
                </label>
                <select name="Master.MaQuanHuyen" id="district" class="infoma">
                 @* <option value="@Model.MaQuanHuyen">@getHuyen(Model.MaQuanHuyen).Name</option>*@
                 <option value="" selected>--- Chọn Huyện/quận ---</option>
                </select>
              </div>
              <div class="row">
                <label class="lb-info">Xã/phường/thị trấn: </label>
                <select name="Master.MaPhuongXa" id="ward" class="infoma">
                  @*<option value="@Model.MaPhuongXa">@getXa(Model.MaPhuongXa).Name</option>*@
                  <option value="" selected>--- Chọn Xã/phường/thị trấn ---</option>
                </select>
              </div>
              <div class="row">
                <label class="lb-info"
                  >Thôn, ấp<i>(số nhà, đường phố)</i>:
                </label>
                <input name="Master.DiaChiCuThe" type="text" value="@Model.DiaChiCuThe" class="infoma" />
              </div>
            </div>
          </div>
          <div class="row">
            <label class="lb-info"><b>3. Số điện thoại: </b></label>
            <input name="Master.Sdt" type="text" value="@Model.SdtdoanhNghiep" class="infoma" />
          </div>
          <div class="row">
            <label class="lb-info"><b>4. Email: </b></label>
            <input name="Master.Email" type="text" value="@Model.Email" class="infoma" />
          </div>
          <div class="loaihinh">
            <label><b>5. Loại hình kinh tế: </b></label>

            <div class="checkbox-tt">
              <label> 1.Kinh tế nhà nước</label>
              <label> 2.Kinh tế ngoài nhà nước</label>
              <label> 3.Kinh tế có vốn đầu tư trực tiếp nước ngoài</label>
            </div>
            <div class="checkbox">
                @if(Model.MaLh.Trim()=="01"){
                    <input type="radio" checked name="Master.MaLh" value="01"/>
            }
            else{
                        <input type="radio" name="Master.MaLh" value="01"/>
            } 
            @if (Model.MaLh.Trim() == "02")
            {
                        <input type="radio" checked name="Master.MaLh" value="02"/>
            }
            else{
                        <input type="radio" name="Master.MaLh" value="02"/>
            } 
            
            @if (Model.MaLh.Trim() == "03") {
                   <input type="radio" checked name="Master.MaLh" value="03"/>
            }else{
                    <input type="radio" name="Master.MaLh" value="03"/>
            }
            </div>
          </div>
      <div class="nganhKD row">
              <label class="nganh-lb" for=""><b>6. Ngành hoạt động kinh doanh</b></label>
    <div class="nganh-ct">
        @{
            int i= 0;
        }
        @foreach (NganhKinhDoanh nganh in getNganhKinhDoanh(Model.MaSoThue, Model.MaSoThue2))
        {
            
                <div class="row">
                   <div class="MNHD row">
                      <input value="@nganh.MaNganh.Substring(0,1)" type="text"
                         maxlength="1"
                         size="1"
                         class="text-center MN"/>
                        <input value="@nganh.MaNganh.Substring(1,1)"
                      type="text"
                      maxlength="1"
                      size="1"
                      class="text-center MN"
                    />
                        <input value="@nganh.MaNganh.Substring(2,1)"
                      type="text"
                      maxlength="1"
                      size="1"
                      class="text-center MN"
                    />
                    <input value="@nganh.MaNganh.Substring(3,1)"
                          type="text"
                          maxlength="1"
                          size="1"
                          class="text-center MN"
                    />
                        <input value="@nganh.MaNganh.Substring(4,1)"
                      type="text"
                      maxlength="1"
                      size="1"
                      class="text-center MN"
                    />
                  </div>
                      <label for="">Tên ngành HĐKD: @getNganhHoatDongKinhDoanh(nganh.MaNganh).TenNganh</label>
                  
                </div>
            }
             </div>
      </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script>
    var citis = document.getElementById("city");
var districts = document.getElementById("district");
var wards = document.getElementById("ward");

var Parameter = {
  url: "https://localhost:" + window.location.port + "/assets/DiaChi.json",
  method: "GET", 
  responseType: "application/json", 
};
var promise = axios(Parameter);
promise.then(
    function (result) {
        renderCity(result.data);
});
function renderCity(data) {
  for (const x of data) {
      if(x.Id == @Html.Raw(Model.MaTinhTp.Trim())){
            citis.options[citis.options.length] = new Option(x.Name, x.Id,true,true);
            const result = data.filter(n => n.Id === x.Id);

            for (const k of result[0].Districts) {
                if(k.Id == @Html.Raw(Model.MaQuanHuyen.Trim())){
                    district.options[district.options.length] = new Option(k.Name, k.Id,true,true);
                    const dataCity = data.filter((n) => n.Id === citis.value);
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === k.Id)[0].Wards;
                      for (const w of dataWards) {
                          if(w.Id==@Html.Raw(Model.MaPhuongXa.Trim())){
                            wards.options[wards.options.length] = new Option(w.Name, w.Id,true,true);
                          }else{
                              wards.options[wards.options.length] = new Option(w.Name, w.Id);
                          }
                      }
                }else{
                    district.options[district.options.length] = new Option(k.Name, k.Id);
                }
            }
      }else{
          citis.options[citis.options.length] = new Option(x.Name, x.Id);
      }
  }
citis.onchange = function () {
    district.length = 1;
    ward.length = 1;
    if(this.value != ""){
      const result = data.filter(n => n.Id === this.value);

      for (const k of result[0].Districts) {
        district.options[district.options.length] = new Option(k.Name, k.Id);
      }
    }
  };
  district.onchange = function () {
    ward.length = 1;
    const dataCity = data.filter((n) => n.Id === citis.value);
    if (this.value != "") {
      const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

      for (const w of dataWards) {
            wards.options[wards.options.length] = new Option(w.Name, w.Id);
      }
    }
  };
}
    </script>