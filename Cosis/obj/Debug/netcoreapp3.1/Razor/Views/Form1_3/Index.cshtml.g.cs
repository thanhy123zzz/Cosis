#pragma checksum "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a26f2204944d2e87ae05efdd4519d969155e65b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form1_3_Index), @"mvc.1.0.view", @"/Views/Form1_3/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis.Models.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a26f2204944d2e87ae05efdd4519d969155e65b5", @"/Views/Form1_3/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0b88521a2e1eba7c1c948980452ed678c2226406", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Form1_3_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Cosis.Models.PhieuDieuTra>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/form1_3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
  
    int getThang(){
        return DateTime.Now.Month;
    }
    int getThangTruoc(){
        if(getThang()==1){
            return 12;
        }else{
            return getThang() - 1;
        }
    }
    int getNam(){
        return DateTime.Now.Year;
    }
    string getThangNamTruoc(){
        if (getThang()==1)
            return "12/"+(getNam()-1);else{
            return (getThang()-1) +"/" + getNam();
        }
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
 if (TempData["ThongBao"] != null)
		{

#line default
#line hidden
#nullable disable
            WriteLiteral("\t\t\t<script type=\"text/javascript\" charset=\"utf-8\">\r\n\t\t\t\twindow.onload = function () {\r\n\t\t\t\talert(\"");
#nullable restore
#line 27 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                  Write(Html.Raw(@TempData["ThongBao"]));

#line default
#line hidden
#nullable disable
            WriteLiteral("\");\r\n\t\t\t};\r\n\t\t\t</script>\r\n");
#nullable restore
#line 30 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
		}

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b57561", async() => {
                WriteLiteral("\r\n    <div class=\"choose-day row\">\r\n          <div class=\"choose-month\">\r\n            <label");
                BeginWriteAttribute("for", " for=\"", 864, "\"", 870, 0);
                EndWriteAttribute();
                WriteLiteral(">Th√°ng</label>\r\n            <select");
                BeginWriteAttribute("name", " name=\"", 906, "\"", 913, 0);
                EndWriteAttribute();
                BeginWriteAttribute("id", " id=\"", 914, "\"", 919, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 36 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                 for(int i =1;i<=12;i++){
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                     if (getThang() == i)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b58824", async() => {
#nullable restore
#line 39 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                               Write(i);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 39 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                    WriteLiteral(i);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 40 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                    }else{

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b511172", async() => {
#nullable restore
#line 41 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                      Write(i);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 41 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                           WriteLiteral(i);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 42 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                     
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </select>\r\n          </div>\r\n          <div class=\"choose-year\">\r\n            <label");
                BeginWriteAttribute("for", " for=\"", 1319, "\"", 1325, 0);
                EndWriteAttribute();
                WriteLiteral(">NƒÉm</label>\r\n            <input\r\n              type=\"text\"\r\n              size=\"1\"");
                BeginWriteAttribute("value", "\r\n              value=\"", 1409, "\"", 1441, 1);
#nullable restore
#line 51 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
WriteAttributeValue("", 1432, getNam(), 1432, 9, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"
              style=""height: 26px""
              pattern=""1900-2023""
            />
          </div>
        </div>
        <div class=""form-group text-center"">
          <label class=""choose-title"">
            <b>ƒêI·ªÄU TRA HO·∫†T ƒê·ªòNG TH∆Ø∆†NG M·∫†I V√Ä D·ªäCH V·ª§ </b>
          </label>
        </div>
        <div class=""form-group MSTP-info"">
          <label class=""P-name""><b>Phi·∫øu 1.3/DN-VT-T</b></label>
          <div class=""mstp"">
          <label");
                BeginWriteAttribute("for", " for=\"", 1905, "\"", 1911, 0);
                EndWriteAttribute();
                WriteLiteral(@">M√£ s·ªë thu·∫ø</label>
          <div class=""row"">
            <input
              type=""text""
              id=""n0""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              autofocus
              data-next=""1""
            />
            <input
              type=""text""
              id=""n1""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""2""
            />
            <input
              type=""text""
              id=""n2""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""3""
            />
            <input
              type=""text""
              id=""n3""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""4""
     ");
                WriteLiteral(@"       />
            <input
              type=""text""
              id=""n4""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""5""
            />
            <input
              type=""text""
              id=""n5""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""6""
            />
            <input
              type=""text""
              id=""n6""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""7""
            />
            <input
              type=""text""
              id=""n7""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""8""
            />
            <input
              type=""text""
      ");
                WriteLiteral(@"        id=""n8""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""9""
            />
            <input
              type=""text""
              id=""n9""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""10""
            />
          </div>
          <div class=""row"">
            <input
              type=""text""
              id=""n10""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""11""
            />
            <input
              type=""text""
              id=""n11""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""12""
            />
            <input
              type=""text""
              id=""");
                WriteLiteral(@"n12""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""13""
            />
            <input type=""hidden"" id=""MST1"" name=""Master.MaSoThue""/>
          </div>
          </div>
        </div>
        <div class=""form-group text-center tenphieu"">
          <label class=""text-center"">
            <b>PHI·∫æU THU TH·∫¨P TH√îNG TIN ƒê·ªêI V·ªöI DOANH NGHI·ªÜP/H·ª¢P T√ÅC X√É</b>
          </label>
          <label>
            <b>
              <i>
                (√Åp d·ª•ng ƒë·ªëi v·ªõi doanh nghi·ªáp/chi nh√°nh doanh nghi·ªáp, h·ª£p t√°c x√£
                c√≥ ho·∫°t ƒë·ªông v·∫≠n t·∫£i, kho b√£i)
              </i>
            </b>
          </label>
        </div>

        <div class=""form-group text-center"">
          <div class=""row""></div>
          <div>
            <label> <b>Th√°ng ");
#nullable restore
#line 208 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                        Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral(" NƒÉm ");
#nullable restore
#line 208 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                        Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</b> </label>
          </div>
          <div class=""row""></div>
        </div>
        <div class=""form-group m-title bg-primary"">
          <h5><b>A. TH√îNG TIN CHUNG</b></h5>
        </div>
        <div id=""ThongTinDoanhNghiepGroup"" class=""form-group"">
          <div class=""row"">
            <label class=""lb-info"">T√™n doanh nghi·ªáp/HTX: </label>
            <input type=""text"" name=""Master.Ten"" class=""infoma"" />
          </div>
          <div class=""adress"">
            <label");
                BeginWriteAttribute("for", " for=\"", 6381, "\"", 6387, 0);
                EndWriteAttribute();
                WriteLiteral(@">ƒê·ªãa ch·ªâ doanh nghi·ªáp </label>
            <div class=""adress-detail"">
              <div class=""row"">
                <label class=""lb-info"">T·ªânh/TP tr·ª±c thu·ªôc TW: </label>
                <select name=""Master.MaTinhTp"" id=""city"" class=""infoma"">
                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b520315", async() => {
                    WriteLiteral("--- Ch·ªçn T·ªânh/TP ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </select>
              </div>
              <div class=""row"">
                <label class=""lb-info""
                  >Huy·ªán/qu·∫≠n <i>(th·ªã x√£, TP thu·ªôc t·ªânh)</i>:
                </label>
                <select name=""Master.MaQuanHuyen"" id=""district"" class=""infoma"">
                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b521872", async() => {
                    WriteLiteral("--- Ch·ªçn Huy·ªán/qu·∫≠n ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </select>\r\n              </div>\r\n              <div class=\"row\">\r\n                <label class=\"lb-info\">X√£/ph∆∞·ªùng/th·ªã tr·∫•n: </label>\r\n                <select name=\"Master.MaPhuongXa\" id=\"ward\" class=\"infoma\">\r\n                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b523378", async() => {
                    WriteLiteral("--- Ch·ªçn X√£/ph∆∞·ªùng/th·ªã tr·∫•n ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </select>
              </div>
              <div class=""row"">
                <label class=""lb-info""
                  >Th√¥n, ·∫•p<i>(s·ªë nh√†, ƒë∆∞·ªùng ph·ªë)</i>:
                </label>
                <input name=""Master.DiaChiCuThe"" type=""text"" class=""infoma"" />
              </div>
            </div>
          </div>
          <div class=""row"">
            <label class=""lb-info"">S·ªë ƒëi·ªán tho·∫°i: </label>
            <input name=""Master.Sdt"" type=""text"" class=""infoma"" />
          </div>
          <div class=""row"">
            <label class=""lb-info"">Email: </label>
            <input name=""Master.Email"" type=""text"" class=""infoma"" />
          </div>
          <div class=""loaihinh"">
            <label>Lo·∫°i h√¨nh kinh t·∫ø</label>

            <div class=""checkbox-tt"">
              <label> 1.Kinh t·∫ø nh√† n∆∞·ªõc</label>
              <label> 2.Kinh t·∫ø ngo√†i nh√† n∆∞·ªõc</label>
              <label> 3.Kinh t·∫ø c√≥ v·ªën ƒë·∫ßu t∆∞ tr·ª±c ti·∫øp n∆∞·ªõc ngo√†i</label>
            </div>
           ");
                WriteLiteral(@" <div class=""checkbox"">
              <input type=""radio"" name=""Master.MaLh"" value=""Kinh t·∫ø nh√† n∆∞·ªõc"" />
              <input 
                type=""radio""
                name=""Master.MaLh""
                value=""Kinh t·∫ø ngo√†i nh√† n∆∞·ªõc""
              />
              <input
                type=""radio""
                name=""Master.MaLh""
                value=""Kinh t·∫ø c√≥ v·ªën ƒë·∫ßu t∆∞ tr·ª±c ti·∫øp n∆∞·ªõc ngo√†i""
              />
            </div>
          </div>
          <div class=""nganhKD"">
            <div class=""row"">
              <label");
                BeginWriteAttribute("for", " for=\"", 8951, "\"", 8957, 0);
                EndWriteAttribute();
                WriteLiteral(@">Ng√†nh ho·∫°t ƒë·ªông kinh doanh</label>
              <div class=""MNHD row"">
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
              </div>
              <label");
                BeginWriteAttribute("for", " for=\"", 9965, "\"", 9971, 0);
                EndWriteAttribute();
                WriteLiteral(@">T√™n ng√†nh HƒêKD:</label>
              <input type=""text"" readonly class=""infoma-nganh"" style=""width: 35%;""/>
            </div>
          </div>    
        </div>
        <div class=""form-group m-title bg-primary"">
          <h5><b>B. K·∫æT QU·∫¢ HO·∫†T ƒê·ªòNG KINH DOANH</b></h5>
        </div>
        <table class=""table table-striped table-hover table-bordered"">
          <thead>
            <tr class=""text-center"">
              <th><b>T√™n ch·ªâ ti√™u</b></th>
              <th><b>ƒê∆°n v·ªã t√≠nh</b></th>
              <th style=""width:20%;""><b>Th√°ng th·ª±c hi·ªán ");
#nullable restore
#line 329 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                   Write(getThangNamTruoc());

#line default
#line hidden
#nullable disable
                WriteLiteral("</b></th>\r\n              <th style=\"width:20%;\"><b>D·ª± t√≠nh ");
#nullable restore
#line 330 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                           Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 330 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                       Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(" </b></th>\r\n              <th style=\"width:20%;\">\r\n                <b>C·ªông d·ªìn t·ª´ ƒë·∫ßu nƒÉm ƒë·∫øn cu·ªëi th√°ng ");
#nullable restore
#line 332 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                 Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 332 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                             Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</b>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr class=""text-center"">
              <td>A</td>
              <td>B</td>
              <td>1</td>
              <td>2</td>
              <td>3</td>
            </tr>
            <tr>
              <td>1.T·ªïng doanh thu <input type=""hidden"" id=""stt0"" name=""Detail[0].Stt"" value=""1.""/>
                    <input type=""hidden"" name=""Detail[0].TenCt"" value=""T·ªïng doanh thu""/>    
              </td>
              
              <td class=""text-center"">Tri·ªáu ƒë·ªìng 
                  <input type=""hidden"" name=""Detail[0].Dvt"" value=""Tri·ªáu ƒë·ªìng""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly id=""ThthangTruoc0"" oninput=""changeThthangTruoc(0)"" name=""Detail[0].ThthangTruoc"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly id=""DuTinh0"" oninput=""changeDuTinh(0)"" name=""Detail[0].DuTinh"" class=""infomal"" /></t");
                WriteLiteral(@"d>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly id=""TongCongDon0"" name=""Detail[0].TongCongDon"" class=""infomal"" /></td>
            </tr>
            <tr>
              <th attr colspan=""5"">I. Ho·∫°t ƒë·ªông v·∫≠n t·∫£i h√†nh kh√°ch</th>
            </tr>
            <tr>
              <td>2.Doanh thu thu·∫ßn<input type=""hidden"" id=""stt2"" name=""Detail[1].Stt"" value=""2.""/>
                    <input type=""hidden"" name=""Detail[1].TenCt"" value=""Doanh thu thu·∫ßn""/>    
              </td>

              <td class=""text-center"">Tri·ªáu ƒë·ªìng 
                  <input type=""hidden"" name=""Detail[1].Dvt"" value=""Tri·ªáu ƒë·ªìng""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[1].ThthangTruoc"" id=""ThthangTruoc2"" oninput=""changeThthangTruoc(2)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[1].DuTinh"" id=""DuTinh2"" oninput=""changeDuTinh(2)"" class=""infomal"" /></td>
              <t");
                WriteLiteral(@"d><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[1].TongCongDon"" id=""TongCongDon2"" oninput=""changeCongDon(2)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>3.S·ªë l∆∞·ª£t kh√°ch v·∫≠n chuy·ªÉn<input type=""hidden"" id=""stt3"" name=""Detail[2].Stt"" value=""3.""/>
                    <input type=""hidden"" name=""Detail[2].TenCt"" value=""S·ªë l∆∞·ª£t kh√°ch v·∫≠n chuy·ªÉn""/>    
              </td>

              <td class=""text-center"">L∆∞·ª£t kh√°ch
                  <input type=""hidden"" name=""Detail[2].Dvt"" value=""L∆∞·ª£t kh√°ch""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[2].ThthangTruoc"" id=""ThthangTruoc3"" oninput=""changeThthangTruoc(3)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[2].DuTinh"" id=""DuTinh3"" oninput=""changeDuTinh(3)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[2].TongCong");
                WriteLiteral(@"Don"" id=""TongCongDon3"" oninput=""changeCongDon(3)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td ""><i>3.1.Trong ƒë√≥: Ngo√†i n∆∞·ªõc</i>
              <input type=""hidden"" name=""Detail[3].Stt"" id=""stt3_1"" value=""3.1.""/>
                    <input type=""hidden"" name=""Detail[3].TenCt"" value=""Trong ƒë√≥: Ngo√†i n∆∞·ªõc""/>     
              </td>
              <td class=""text-center"">L∆∞·ª£t kh√°ch
                  <input type=""hidden"" name=""Detail[3].Dvt"" value=""L∆∞·ª£t kh√°ch""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required id=""ThthangTruoc3_1"" name=""Detail[3].ThthangTruoc"" oninput=""changeThthangTruoc('3_1')"" class=""infomal"" />
               
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[3].DuTinh"" id=""DuTinh3_1"" oninput=""changeDuTinh('3_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[3].TongCongDon"" id=""TongCongDo");
                WriteLiteral(@"n3_1"" oninput=""changeCongDon('3_1')"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>4.S·ªë l∆∞·ª£t h√†nh kh√°ch lu√¢n chuy·ªÉn
              <input type=""hidden"" name=""Detail[4].Stt"" id=""stt4"" value=""4.""/>
                    <input type=""hidden"" name=""Detail[4].TenCt"" value=""S·ªë l∆∞·ª£t h√†nh kh√°ch lu√¢n chuy·ªÉn""/>     
              </td>
              <td class=""text-center"">HK Km
                  <input type=""hidden"" name=""Detail[4].Dvt"" value=""HK Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[4].ThthangTruoc"" id=""ThthangTruoc4"" oninput=""changeThthangTruoc(4)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[4].DuTinh"" id=""DuTinh4"" oninput=""changeDuTinh(4)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[4].TongCongDon"" id=""TongCongDon4"" oninput=""changeCongDon(4)"" class=""infomal"" /></td>
       ");
                WriteLiteral(@"     </tr>
            <tr>
              <td ""><i>4.1.Trong ƒë√≥: Ngo√†i n∆∞·ªõc</i>
              <input type=""hidden"" name=""Detail[5].Stt"" id=""stt4_1"" value=""4.1.""/>
                    <input type=""hidden"" name=""Detail[5].TenCt"" value=""Trong ƒë√≥: Ngo√†i n∆∞·ªõc""/>     
              </td>
              <td class=""text-center"">HK Km
                  <input type=""hidden"" name=""Detail[5].Dvt"" value=""HK Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[5].ThthangTruoc"" id=""ThthangTruoc4_1"" oninput=""changeThthangTruoc('4_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[5].DuTinh"" id=""DuTinh4_1"" oninput=""changeDuTinh('4_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[5].TongCongDon"" id=""TongCongDon4_1"" oninput=""changeCongDon('4_1')"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>5.ƒê∆°n gi");
                WriteLiteral(@"√° b√¨nh qu√¢n
              <input type=""hidden"" name=""Detail[6].Stt"" id=""stt5"" value=""5.""/>
                    <input type=""hidden"" name=""Detail[6].TenCt"" value=""ƒê∆°n gi√° b√¨nh qu√¢n""/>     
              </td>
              <td class=""text-center"">HK Km
                  <input type=""hidden"" name=""Detail[6].Dvt"" value=""HK Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[6].ThthangTruoc"" id=""ThthangTruoc5"" oninput=""changeThthangTruoc(5)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[6].DuTinh"" id=""DuTinh5"" oninput=""changeDuTinh(5)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[6].TongCongDon"" id=""TongCongDon5"" oninput=""changeCongDon(5)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>6.T·ªïng s·ªë ph∆∞∆°ng ti·ªán ƒëang ho·∫°t ƒë·ªông
              <input type=""hidden"" name=""Detail[7].Stt"" id=""stt6""");
                WriteLiteral(@" value=""6.""/>
                    <input type=""hidden"" name=""Detail[7].TenCt"" value=""T·ªïng s·ªë ph∆∞∆°ng ti·ªán ƒëang ho·∫°t ƒë·ªông""/>     
              </td>
              <td class=""text-center"">HK Km
                  <input type=""hidden"" name=""Detail[7].Dvt"" value=""HK Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[7].ThthangTruoc"" id=""ThthangTruoc6"" oninput=""changeThthangTruoc(6)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[7].DuTinh"" id=""DuTinh6"" oninput=""changeDuTinh(6)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[7].TongCongDon"" id=""TongCongDon6"" oninput=""changeCongDon(6)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>7.T·ªïng t·∫£i tr·ªçng
              <input type=""hidden"" name=""Detail[8].Stt"" id=""stt7"" value=""7.""/>
                    <input type=""hidden"" name=""Detail[8].TenCt"" va");
                WriteLiteral(@"lue=""T·ªïng t·∫£i tr·ªçng""/>     
              </td>
              <td class=""text-center"">HK Km
                  <input type=""hidden"" name=""Detail[8].Dvt"" value=""HK Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[8].ThthangTruoc"" id=""ThthangTruoc7"" oninput=""changeThthangTruoc(7)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[8].DuTinh"" id=""DuTinh7"" oninput=""changeDuTinh(7)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[8].TongCongDon"" id=""TongCongDon7"" oninput=""changeCongDon(7)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <th attr colspan=""5"">II.Ho·∫°t ƒë·ªông v·∫≠n t·∫£i h√†ng ho√°</th>
            </tr>
            <tr>
              <td>8.Doanh thu thu·∫ßn
              <input type=""hidden"" name=""Detail[9].Stt"" id=""stt8"" value=""8.""/>
                    <input type=""hidden"" name=""Detail[9].T");
                WriteLiteral(@"enCt"" value=""Doanh thu thu·∫ßn""/>     
              </td>
              <td class=""text-center"">Tri·ªáu ƒë·ªìng
                  <input type=""hidden"" name=""Detail[9].Dvt"" value=""Tri·ªáu ƒë·ªìng""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[9].ThthangTruoc"" id=""ThthangTruoc8"" oninput=""changeThthangTruoc(8)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[9].DuTinh"" id=""DuTinh8"" oninput=""changeDuTinh(8)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[9].TongCongDon"" id=""TongCongDon8"" oninput=""changeCongDon(8)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>9.Kh·ªëi l∆∞·ª£ng h√†ng h√≥a v·∫≠n chuy·ªÉn
              <input type=""hidden"" name=""Detail[10].Stt"" id=""stt9"" value=""9.""/>
                    <input type=""hidden"" name=""Detail[10].TenCt"" value=""Kh·ªëi l∆∞·ª£ng h√†ng h√≥a v·∫≠n chuy·ªÉn""/>     
              </td>");
                WriteLiteral(@"
              <td class=""text-center"">T·∫•n
                  <input type=""hidden"" name=""Detail[10].Dvt"" value=""T·∫•n""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[10].ThthangTruoc"" id=""ThthangTruoc9"" oninput=""changeThthangTruoc(9)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[10].DuTinh"" id=""DuTinh9"" oninput=""changeDuTinh(9)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[10].TongCongDon"" id=""TongCongDon9"" oninput=""changeCongDon(9)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td ""><i>9.1.Trong ƒë√≥: Ngo√†i n∆∞·ªõc</i>
              <input type=""hidden"" name=""Detail[11].Stt"" id=""stt9_1"" value=""9.1.""/>
                    <input type=""hidden"" name=""Detail[11].TenCt"" value=""Trong ƒë√≥: Ngo√†i n∆∞·ªõc""/>     
              </td>
              <td class=""text-center"">T·∫•n
                  <input ty");
                WriteLiteral(@"pe=""hidden"" name=""Detail[11].Dvt"" value=""T·∫•n""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[11].ThthangTruoc"" id=""ThthangTruoc9_1"" oninput=""changeThthangTruoc('9_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[11].DuTinh"" id=""DuTinh9_1"" oninput=""changeDuTinh('9_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[11].TongCongDon"" id=""TongCongDon9_1"" oninput=""changeCongDon('9_1')"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td>10.Kh·ªëi l∆∞·ª£ng h√†ng h√≥a lu√¢n chuy·ªÉn
              <input type=""hidden"" name=""Detail[12].Stt"" id=""stt10"" value=""10.""/>
                    <input type=""hidden"" name=""Detail[12].TenCt"" value=""Kh·ªëi l∆∞·ª£ng h√†ng h√≥a lu√¢n chuy·ªÉn""/>     
              </td>
              <td class=""text-center"">T·∫•n.Km
                  <input type=""hidden"" name=""Detail[12].Dvt"" value=""");
                WriteLiteral(@"T·∫•n.Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[12].ThthangTruoc"" id=""ThthangTruoc10"" oninput=""changeThthangTruoc(10)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[12].DuTinh"" id=""DuTinh10"" oninput=""changeDuTinh(10)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[12].TongCongDon"" id=""TongCongDon10"" oninput=""changeCongDon(10)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <td ""><i>10.1.Trong ƒë√≥: Ngo√†i n∆∞·ªõc</i>
              <input type=""hidden"" name=""Detail[13].Stt"" id=""stt10_1"" value=""10.1.""/>
                    <input type=""hidden"" name=""Detail[13].TenCt"" value=""Trong ƒë√≥: Ngo√†i n∆∞·ªõc""/>     
              </td>
              <td class=""text-center"">T·∫•n.Km
                  <input type=""hidden"" name=""Detail[13].Dvt"" value=""T·∫•n.Km""/>  
              </td>
              <td><inpu");
                WriteLiteral(@"t type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[13].ThthangTruoc"" id=""ThthangTruoc10_1"" oninput=""changeThthangTruoc('10_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[13].DuTinh"" id=""DuTinh10_1"" oninput=""changeDuTinh('10_1')"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[13].TongCongDon"" id=""TongCongDon10_1"" oninput=""changeCongDon('10_1')"" class=""infomal"" /></td>
            </tr>
            <tr>
               <td>11.ƒê∆°n gi√° b√¨nh qu√¢n
              <input type=""hidden"" name=""Detail[14].Stt"" id=""stt11"" value=""11.""/>
                    <input type=""hidden"" name=""Detail[14].TenCt"" value=""ƒê∆°n gi√° b√¨nh qu√¢n""/>     
              </td>
              <td class=""text-center"">ƒê·ªìng/T·∫•n.Km
                  <input type=""hidden"" name=""Detail[14].Dvt"" value=""ƒê·ªìng/T·∫•n.Km""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required nam");
                WriteLiteral(@"e=""Detail[14].ThthangTruoc"" id=""ThthangTruoc11"" oninput=""changeThthangTruoc(11)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[14].DuTinh"" id=""DuTinh11"" oninput=""changeDuTinh(11)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[14].TongCongDon"" id=""TongCongDon11"" oninput=""changeCongDon(11)"" class=""infomal"" /></td>
            </tr>
            <tr>
             <td>12.Kh·ªëi l∆∞·ª£ng h√†ng h√≥a lu√¢n chuy·ªÉn
              <input type=""hidden"" name=""Detail[15].Stt"" id=""stt12"" value=""12.""/>
                    <input type=""hidden"" name=""Detail[15].TenCt"" value=""Kh·ªëi l∆∞·ª£ng h√†ng h√≥a lu√¢n chuy·ªÉn""/>     
              </td>
              <td class=""text-center"">C√°i
                  <input type=""hidden"" name=""Detail[15].Dvt"" value=""C√°i""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[15].ThthangTruoc"" id=""ThthangTruoc12"" oninput=""");
                WriteLiteral(@"changeThthangTruoc(12)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[15].DuTinh"" id=""DuTinh12"" oninput=""changeDuTinh(12)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[15].TongCongDon"" id=""TongCongDon12"" oninput=""changeCongDon(12)"" class=""infomal"" /></td>
            </tr>
            <tr>
                <td>13.T·ªïng t·∫£i tr·ªçng
              <input type=""hidden"" name=""Detail[16].Stt"" id=""stt13"" value=""13.""/>
                    <input type=""hidden"" name=""Detail[16].TenCt"" value=""T·ªïng t·∫£i tr·ªçng""/>     
              </td>
              <td class=""text-center"">T·∫•n
                  <input type=""hidden"" name=""Detail[16].Dvt"" value=""T·∫•n""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[16].ThthangTruoc"" id=""ThthangTruoc13"" oninput=""changeThthangTruoc(13)"" class=""infomal"" /></td>
              <td><input type=""text"" pa");
                WriteLiteral(@"ttern=""[0-9,.\-$]+""  required name=""Detail[16].DuTinh"" id=""DuTinh13"" oninput=""changeDuTinh(13)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[16].TongCongDon"" id=""TongCongDon13"" oninput=""changeCongDon(13)"" class=""infomal"" /></td>
            </tr>
            <tr>
              <th attr colspan=""5"">
                III.Ho·∫°t ƒë·ªông kho b√£i, d·ªãch v·ª• h·ªó tr·ª£ v·∫≠n t·∫£i c·ªßa th√°ng ");
#nullable restore
#line 558 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                                   Write(getThangTruoc());

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                v√† th√°ng ");
#nullable restore
#line 559 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                    Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
              </th>
            </tr>
            <tr>
              <td>14.Doanh thu thu·∫ßn
              <input type=""hidden"" name=""Detail[17].Stt"" id=""stt14"" value=""14.""/>
                    <input type=""hidden"" name=""Detail[17].TenCt"" value=""Doanh thu thu·∫ßn""/>     
              </td>
              <td class=""text-center"">Tri·ªáu ƒë·ªìng
                  <input type=""hidden"" name=""Detail[17].Dvt"" value=""Tri·ªáu ƒë·ªìng""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[17].ThthangTruoc"" id=""ThthangTruoc14"" oninput=""changeThthangTruoc(14)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[17].DuTinh"" id=""DuTinh14"" oninput=""changeDuTinh(14)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[17].TongCongDon"" id=""TongCongDon14"" oninput=""changeCongDon(14)"" class=""infomal"" /></td>
            </tr>
            <tr>
              ");
                WriteLiteral("<th attr colspan=\"5\">\r\n                IV.Ho·∫°t ƒë·ªông b∆∞u ch√≠nh, chuy·ªÉn ph√°t c·ªßa th√°ng ");
#nullable restore
#line 576 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                         Write(getThangTruoc());

#line default
#line hidden
#nullable disable
                WriteLiteral(" v√† th√°ng ");
#nullable restore
#line 576 "D:\ProjectC#\Cosis\Cosis\Views\Form1_3\Index.cshtml"
                                                                                   Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral(@" l√† bao nhi√™u?
              </th>
            </tr>
            <tr>
              <td>15.Doanh thu thu·∫ßn
              <input type=""hidden"" name=""Detail[18].Stt"" id=""stt15"" value=""15.""/>
                    <input type=""hidden"" name=""Detail[18].TenCt"" value=""Doanh thu thu·∫ßn""/>     
              </td>
              <td class=""text-center"">Tri·ªáu ƒë·ªìng
                  <input type=""hidden"" name=""Detail[18].Dvt"" value=""Tri·ªáu ƒë·ªìng""/>  
              </td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[18].ThthangTruoc"" id=""ThthangTruoc15"" oninput=""changeThthangTruoc(15)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required name=""Detail[18].DuTinh"" id=""DuTinh15"" oninput=""changeDuTinh(15)"" class=""infomal"" /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+""  required readonly name=""Detail[18].TongCongDon"" id=""TongCongDon15"" oninput=""changeCongDon(15)"" class=""infomal"" /></td>
            </tr>
          </tbody>");
                WriteLiteral("\r\n        </table>\r\n        <div class=\"form-group m-title bg-primary\">\r\n          <h5><b>C. C√ÅC Y·∫æU T·ªî ·∫¢NH H∆Ø·ªûNG ƒê·∫æN HO·∫†T ƒê·ªòNG KINH DOANH</b></h5>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label");
                BeginWriteAttribute("for", " for=\"", 30037, "\"", 30043, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n            >Y·∫øu t·ªë n√†o sau ƒë√¢y ·∫£nh h∆∞·ªüng ƒë·∫øn ho·∫°t ƒë·ªông kinh doanh c·ªßa ƒë∆°n v·ªã\r\n            trong th√°ng ...</label\r\n          >\r\n          <div class=\"YTAH\">\r\n            <div class=\"YTAH-tt\">\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30259, "\"", 30265, 0);
                EndWriteAttribute();
                WriteLiteral(">1. Nhu c·∫ßu th·ªã tr∆∞·ªùng</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30318, "\"", 30324, 0);
                EndWriteAttribute();
                WriteLiteral(">2. D·ªãch b·ªánh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30368, "\"", 30374, 0);
                EndWriteAttribute();
                WriteLiteral(">3. Th·ªùi ti·∫øt</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30418, "\"", 30424, 0);
                EndWriteAttribute();
                WriteLiteral(">4. ·∫¢nh h∆∞·ªüng m√πa v·ª•</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30475, "\"", 30481, 0);
                EndWriteAttribute();
                WriteLiteral(">5. Thay ƒë·ªïi nh√¢n s·ª±</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30532, "\"", 30538, 0);
                EndWriteAttribute();
                WriteLiteral(">6. Thay ƒë·ªïi kƒ© thu·∫≠t/c√¥ng ngh·ªá/ph∆∞∆°ng ti·ªán</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30612, "\"", 30618, 0);
                EndWriteAttribute();
                WriteLiteral(">7. Ngu·ªìn v·ªën kinh doanh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30673, "\"", 30679, 0);
                EndWriteAttribute();
                WriteLiteral(">8. Thay ƒë·ªïi ƒë·ªãa ƒëi·ªÉm/th·ªã tr∆∞·ªùng kinh doanh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 30753, "\"", 30759, 0);
                EndWriteAttribute();
                WriteLiteral(@">9. L√Ω do kh√°c: ghi r√µ</label>
            </div>
            <div class=""YTAH-check"">
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong0"" value=""01"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong1"" value=""02"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong2"" value=""03"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong3"" value=""04"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong4"" value=""05"" />
              <input
                type=""checkbox""
                name=""DanhSachNhanToAnhHuong5""
                value=""06""
              />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong6"" value=""07"" />
              <input
                type=""checkbox""
                name=""DanhSachNhanToAnhHuong7""
                value=""08""
              />
              <input type=""checkbox"" id=""YT9""");
                BeginWriteAttribute("value", " value=\"", 31691, "\"", 31699, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
            </div>
          </div>
          <div class=""YTAH9"">
            <textarea
              class=""form-control""
              rows=""1""
              id=""comment""
              name=""NhanToThu9.NoiDung""
              disabled
            ></textarea>
          </div>
        </div>
        <div class=""form-group uname-info"">
          <div class=""row"">
            <label class=""uname-lb"">H·ªç t√™n ng∆∞·ªùi tr·∫£ l·ªùi:</label>
            <input type=""text"" name=""Master.TenNguoiTraLoi""");
                BeginWriteAttribute("id", " id=\"", 32210, "\"", 32215, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"infoma\" />\r\n          </div>\r\n          <div class=\"row\">\r\n            <label class=\"uname-lb\">S·ªë ƒëi·ªán tho·∫°i:</label>\r\n            <input type=\"text\" name=\"Master.SdtnguoiTraLoi\"");
                BeginWriteAttribute("id", " id=\"", 32402, "\"", 32407, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"infoma\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"group-btn\" style=\"justify-content: end;\">\r\n          <select name=\"loai\" style=\"margin-right:10px\">\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b556202", async() => {
                    WriteLiteral("Ch·ªçn file c·∫ßn xu·∫•t");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b557452", async() => {
                    WriteLiteral("Xu·∫•t File PDF");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b558697", async() => {
                    WriteLiteral("Xu·∫•t File Excel");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a26f2204944d2e87ae05efdd4519d969155e65b559944", async() => {
                    WriteLiteral("Xu·∫•t c·∫£ 2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n          </select>\r\n          <button type=\"submit\" value=\"false\" class=\"btn btn-primary\">L∆∞u</button>\r\n        </div>\r\n      ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
      <div class=""form-QLTT"">
        <div class=""head-group"">
          <div class=""title text-center"">
            <h5 class=""title-first""><b>DANH S√ÅCH C∆† S·ªû</b></h5>
            <label class=""title-last""
              ><i>Nh·∫•n v√†o d√≤ng c∆° s·ªü ƒë·ªÉ nh·∫≠p tin</i></label
            >
          </div>
          <div class=""group-radio-btn row"">
            <div class=""check-form"">
              <i class=""bi bi-circle-fill"" style=""color: rgb(0, 160, 255)""></i>
              <label class=""text-primary"">ƒê√£ ƒëi·ªÅu tra</label>
            </div>
            <div class=""check-form"" style=""margin-left: 5px"">
              <i class=""bi bi-circle-fill"" style=""color: white""></i>
              <label>Ch∆∞a ƒëi·ªÅu tra</label>
            </div>
            <div class=""check-form"" style=""margin-left: 5px"">
              <i class=""bi bi-circle-fill"" style=""color: rgb(215, 70, 0)""></i>
              <label class=""text"">Kh√¥ng ƒëi·ªÅu tra</label>
            </div>
          </div>
        </div>
        <table i");
            WriteLiteral(@"d=""example"" class=""table table-bordered table-hover"">
          <thead>
            <tr class=""text-center tab-title"">
              <th class=""th1"">ƒêi·ªÅu tra</th>
              <th class=""th2"">M√£ ƒêB</th>
              <th class=""th3"">C∆° s·ªü s·ªë</th>
              <th class=""th4"">T√™n c∆° s·ªü</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>a575769898</td>
              <td>c</td>
              <td>b</td>
              <td>d</td>
            </tr>
             <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
         ");
            WriteLiteral(@"     <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
            ");
            WriteLiteral(@"             <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>

          </tbody>
        </table>
      </div>
          <script src=""https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js""></script>
<script type=""text/javascript"">
    var citis = document.getElementById(""city"");
var districts = document.getElementById(""district"");
var wards = document.getElementById(""ward"");
var Parameter = {
  url: ""https://localhost:44358/assets/DiaChi.json"", 
  method: ""GET"", 
  responseType: ""application/json"", 
};
var promise = axios(Parameter);
promise.then(function (result) {
  renderCity(result.data);
});

function renderCity(data) {
  for (const x of data) {
    citis.options[citis.options.length] = new Option(x.Name, x.Id);
  }
  citis.onchange = funct");
            WriteLiteral(@"ion () {
    district.length = 1;
    ward.length = 1;
    if(this.value != """"){
      const result = data.filter(n => n.Id === this.value);

      for (const k of result[0].Districts) {
        district.options[district.options.length] = new Option(k.Name, k.Id);
      }
    }
  };
  district.onchange = function () {
    ward.length = 1;
    const dataCity = data.filter((n) => n.Id === citis.value);
    if (this.value != """") {
      const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

      for (const w of dataWards) {
        wards.options[wards.options.length] = new Option(w.Name, w.Id);
      }
    }
  };
}

$('.infomal').on('blur', function() {
    if(checkNumber(this.value)){
        const value = this.value.replace(/,/g, '');
        this.value = parseFloat(value).toLocaleString('en-US', {
        style: 'decimal',
            maximumFractionDigits: 2,
            minimumFractionDigits: 2
            })
    }
});

    function changeThth");
            WriteLiteral(@"angTruoc(tt){
        
      /*  $('#ThthangTruoc'+tt).val($('#ThthangTruoc'+tt).val().replace(/\D/g, ''));*/
      /* if(tt==4){
           $('#ThthangTruoc4_1').attr({
            ""max"" : $('#ThthangTruoc'+tt).val()
        });
       }else if(tt==3){
           $('#ThthangTruoc3_1').attr({
            ""max"" : $('#ThthangTruoc'+tt).val()
        });
       }else if(tt==9){
           $('#ThthangTruoc9_1').attr({
            ""max"" : $('#ThthangTruoc'+tt).val()
        });
       }
       else if(tt==10){
           $('#ThthangTruoc10_1').attr({
            ""max"" : $('#ThthangTruoc'+tt).val()
        });
       }
       */
        var value = getValue($('#ThthangTruoc'+tt).val());

        if(checkNumber(value)){
            var stt = $('#stt'+tt).val();        
            var mst = $('#MST1').val();
            var duTinh = $('#DuTinh'+tt).val();
            $.ajax({
                type: 'POST',
                url: '/get-tong',
                data: ""mast="" + mst + ""&stt=""+s");
            WriteLiteral(@"tt+""&thangTrc=""+value+""&duTinh=""+duTinh,
                success: function (result) {
                    $('#TongCongDon'+tt).val(
                        parseFloat(result).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
                    );
                    changeCongDon(result,tt);
                },
               error: function (result) {
               alert('M√£ s·ªë thu·∫ø kh√¥ng t·ªìn t·∫°i!');
             }
            });
          }
        if(tt==2||tt==8||tt==14||tt==15){
            var tong = 0;
            var value2 = getValue($('#ThthangTruoc'+2).val());
            if(checkNumber(value2)){
                tong = tong + value2;
            }
            var value8 = getValue($('#ThthangTruoc'+8).val());
            if(checkNumber(value8)){
                tong = tong + value8;
            }
            var value14 = getValue(");
            WriteLiteral(@"$('#ThthangTruoc'+14).val());
            if(checkNumber(value14)){
                tong = tong + value14;
            }
            var value15 = getValue($('#ThthangTruoc'+15).val());
            if(checkNumber(value15)){
                tong = tong + value15;
            }
            $(""#ThthangTruoc0"").val(
            parseFloat(tong).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
            );
        }
    }
    function changeDuTinh(tt){
       /* $('#DuTinh'+tt).val($('#DuTinh'+tt).val().replace(/\D/g, ''));*/

        /*if(tt==4){
           $('#DuTinh4_1').attr({
            ""max"" : $('#DuTinh'+tt).val()
        });
       }else if(tt==3){
           $('#DuTinh3_1').attr({
            ""max"" : $('#DuTinh'+tt).val()
        });
       }else if(tt==9){
           $('#DuTinh9_1').attr({
            ""max"" : $('#DuTinh'+tt).val()
");
            WriteLiteral(@"
        });
       }
       else if(tt==10){
           $('#DuTinh10_1').attr({
            ""max"" : $('#DuTinh'+tt).val()
        });
       }*/

        var value = parseFloat($('#DuTinh'+tt).val());

        if((!isNaN(value) && $('#DuTinh'+tt).val() === '' + value)){
            var stt = $('#stt'+tt).val();        
            var mst = $('#MST1').val();
            var duTinh = $('#ThthangTruoc'+tt).val();
            $.ajax({
                type: 'POST',
                url: '/get-tong',
                data: ""mast="" + mst + ""&stt=""+stt+""&thangTrc=""+duTinh+""&duTinh=""+value,
                success: function (result) {
                    $('#TongCongDon'+tt).val(
                        parseFloat(result).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
                    );
                    changeCongDon(result,tt);
             ");
            WriteLiteral(@"   },
               error: function (result) {
               alert('M√£ s·ªë thu·∫ø kh√¥ng t·ªìn t·∫°i!');
             }
            });
          }
          if(tt==2||tt==8||tt==14||tt==15){
            var tong = 0;
            var value2 = getValue($('#DuTinh'+2).val());
            if(checkNumber(value2)){
                tong = tong + value2;
            }
            var value8 = getValue($('#DuTinh'+8).val());
            if(checkNumber(value8)){
                tong = tong + value8;
            }
            var value14 = getValue($('#DuTinh'+14).val());
            if(checkNumber(value14)){
                tong = tong + value14;
            }
            var value15 = getValue($('#DuTinh'+15).val());
            if(checkNumber(value15)){
                tong = tong + value15;
            }
            $(""#DuTinh0"").val(
            parseFloat(tong).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
              ");
            WriteLiteral(@"          minimumFractionDigits: 2
                      })
            );
        }
        /*var tong = 0;
        for(var i=1;i<=15;i++){
            var value = parseFloat($('#DuTinh'+i).val()); 
            if((!isNaN(value) && $('#DuTinh'+i).val() === '' + value)){
            tong = tong + value;
          }
       }
       $(""#TongDuTinh"").val(tong);*/
    }
    
    function changeCongDon(result,tt){
        
        if(tt==2||tt==8||tt==14||tt==15){
            var tong = 0;
            if(checkNumber($('#TongCongDon2').val())){
                tong = tong + getValue($('#TongCongDon2').val());
            }
            if(checkNumber($('#TongCongDon8').val())){
                tong = tong + getValue($('#TongCongDon8').val());
            }
            if(checkNumber($('#TongCongDon14').val())){
                tong = tong + getValue($('#TongCongDon14').val());
            }
            if(checkNumber($('#TongCongDon').val())){
                tong = tong + getValue($('#To");
            WriteLiteral(@"ngCongDon15').val());
            }
            $(""#TongCongDon0"").val(
                parseFloat(tong).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
            );
        }
    }
    
    function checkNumber(str) {
        return /[0-9,.\-$]+/.test(str);
    }
    function getValue(str){
       return Number(str.replace(/[^0-9.-]+/g,""""));
    }
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Cosis.Models.PhieuDieuTra> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
