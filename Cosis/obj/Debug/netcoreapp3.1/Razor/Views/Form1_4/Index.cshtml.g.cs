#pragma checksum "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "df82e4ad50951f3beec66369c21a889889da9de2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form1_4_Index), @"mvc.1.0.view", @"/Views/Form1_4/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\ProjectC#\Cosis\Cosis\Views\_ViewImports.cshtml"
using Cosis.Models.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df82e4ad50951f3beec66369c21a889889da9de2", @"/Views/Form1_4/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0b88521a2e1eba7c1c948980452ed678c2226406", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Form1_4_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Cosis.Models.PhieuDieuTra>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/form1_4"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
  
    int getThang()
    {
        return DateTime.Now.Month;
    }
    int getThangTruoc()
    {
        if (getThang() == 1)
        {
            return 12;
        }
        else
        {
            return getThang() - 1;
        }
    }
    int getNam()
    {
        return DateTime.Now.Year;
    }
    string getThangNamTruoc()
    {
        if (getThang() == 1)
            return "12/" + (getNam() - 1);
        else
        {
            return (getThang() - 1) + "/" + getNam();
        }
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
 if (TempData["ThongBao"] != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("                <script type=\"text/javascript\" charset=\"utf-8\">\r\n                    window.onload = function () {\r\n                    alert(\"");
#nullable restore
#line 36 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                      Write(Html.Raw(@TempData["ThongBao"]));

#line default
#line hidden
#nullable disable
            WriteLiteral("\");\r\n                };\r\n                </script>\r\n");
#nullable restore
#line 39 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
}     

#line default
#line hidden
#nullable disable
            WriteLiteral("      ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de27743", async() => {
                WriteLiteral("\r\n        <div class=\"choose-day row\">\r\n          <div class=\"choose-month\">\r\n            <label");
                BeginWriteAttribute("for", " for=\"", 1032, "\"", 1038, 0);
                EndWriteAttribute();
                WriteLiteral(">Th√°ng</label>\r\n            <select");
                BeginWriteAttribute("name", " name=\"", 1074, "\"", 1081, 0);
                EndWriteAttribute();
                BeginWriteAttribute("id", " id=\"", 1082, "\"", 1087, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 45 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                 for(int i =1;i<=12;i++){
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                     if (getThang() == i)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de29016", async() => {
#nullable restore
#line 48 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                               Write(i);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 48 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                    WriteLiteral(i);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 49 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                    }else{

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de211364", async() => {
#nullable restore
#line 50 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                      Write(i);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 50 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                           WriteLiteral(i);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 51 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 51 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                     
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </select>\r\n          </div>\r\n          <div class=\"choose-year\">\r\n            <label");
                BeginWriteAttribute("for", " for=\"", 1487, "\"", 1493, 0);
                EndWriteAttribute();
                WriteLiteral(">NƒÉm</label>\r\n            <input\r\n              type=\"text\"\r\n              size=\"1\"");
                BeginWriteAttribute("value", "\r\n              value=\"", 1577, "\"", 1609, 1);
#nullable restore
#line 60 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
WriteAttributeValue("", 1600, getNam(), 1600, 9, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"
              style=""height: 26px""
            />
          </div>
        </div>
        <div class=""form-group text-center"">
          <label class=""choose-title"">
            <b>ƒêI·ªÄU TRA HO·∫†T ƒê·ªòNG TH∆Ø∆†NG M·∫†I V√Ä D·ªäCH V·ª§ </b>
          </label>
        </div>
        <div class=""form-group MSTP-info"">
          <label class=""P-name""><b>Phi·∫øu 1.4/DN-DVK-T</b></label>
          <div class=""mstp"">
          <label");
                BeginWriteAttribute("for", " for=\"", 2039, "\"", 2045, 0);
                EndWriteAttribute();
                WriteLiteral(@">M√£ s·ªë thu·∫ø</label>
          <div class=""row"">
            <input
              type=""text""
              id=""n0""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              autofocus
              data-next=""1""
            />
            <input
              type=""text""
              id=""n1""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""2""
            />
            <input
              type=""text""
              id=""n2""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""3""
            />
            <input
              type=""text""
              id=""n3""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""4""
     ");
                WriteLiteral(@"       />
            <input
              type=""text""
              id=""n4""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""5""
            />
            <input
              type=""text""
              id=""n5""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""6""
            />
            <input
              type=""text""
              id=""n6""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""7""
            />
            <input
              type=""text""
              id=""n7""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""8""
            />
            <input
              type=""text""
      ");
                WriteLiteral(@"        id=""n8""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""9""
            />
            <input
              type=""text""
              id=""n9""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""10""
            />
          </div>
          <div class=""row"">
            <input
              type=""text""
              id=""n10""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""11""
            />
            <input
              type=""text""
              id=""n11""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""12""
            />
            <input
              type=""text""
              id=""");
                WriteLiteral(@"n12""
              maxlength=""1""
              size=""1""
              class=""text-center MS""
              autocomplete=""off""
              data-next=""13""
            />
            <input type=""hidden"" id=""MST1"" name=""Master.MaSoThue""/>
          </div>
          </div>
        </div>
        <div class=""form-group text-center"">
          <label class=""text-center"">
            <b>PHI·∫æU THU TH·∫¨P TH√îNG TIN ƒê·ªêI V·ªöI DOANH NGHI·ªÜP/H·ª¢P T√ÅC X√É</b>
          </label>
          <label>
            <b>
              <i>
                (√Åp d·ª•ng ƒë·ªëi v·ªõi doanh nghi·ªáp/chi nh√°nh doanh nghi·ªáp, h·ª£p t√°c x√£
                c√≥ ho·∫°t ƒë·ªông d·ªãch v·ª• kinh doanh b·∫•t ƒë·ªông s·∫£n v√† m·ªôt s·ªë d·ªãch v·ª•
                kh√°c)
              </i>
            </b>
          </label>
        </div>

        <div class=""form-group text-center"">
          <div class=""row""></div>
          <div>
            <label> <b>Th√°ng ");
#nullable restore
#line 217 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                        Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral(" NƒÉm ");
#nullable restore
#line 217 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                        Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</b> </label>
          </div>
          <div class=""row""></div>
        </div>
        <div class=""form-group bg-primary"">
          <h5><b>A. TH√îNG TIN CHUNG</b></h5>
        </div>
        <div id=""ThongTinDoanhNghiepGroup"" class=""form-group"">
          <div class=""row"">
            <label class=""lb-info"">T√™n doanh nghi·ªáp/HTX: </label>
            <input type=""text"" name=""Master.Ten"" class=""infoma"" />
          </div>
          <div class=""adress"">
            <label");
                BeginWriteAttribute("for", " for=\"", 6553, "\"", 6559, 0);
                EndWriteAttribute();
                WriteLiteral(@">ƒê·ªãa ch·ªâ doanh nghi·ªáp </label>
            <div class=""adress-detail"">
              <div class=""row"">
                <label class=""lb-info"">T·ªânh/TP tr·ª±c thu·ªôc TW: </label>
                <select name=""Master.MaTinhTp"" id=""city"" class=""infoma"">
                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de220509", async() => {
                    WriteLiteral("--- Ch·ªçn T·ªânh/TP ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </select>
              </div>
              <div class=""row"">
                <label class=""lb-info""
                  >Huy·ªán/qu·∫≠n <i>(th·ªã x√£, TP thu·ªôc t·ªânh)</i>:
                </label>
                <select name=""Master.MaQuanHuyen"" id=""district"" class=""infoma"">
                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de222066", async() => {
                    WriteLiteral("--- Ch·ªçn Huy·ªán/qu·∫≠n ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </select>\r\n              </div>\r\n              <div class=\"row\">\r\n                <label class=\"lb-info\">X√£/ph∆∞·ªùng/th·ªã tr·∫•n: </label>\r\n                <select name=\"Master.MaPhuongXa\" id=\"ward\" class=\"infoma\">\r\n                  ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de223572", async() => {
                    WriteLiteral("--- Ch·ªçn X√£/ph∆∞·ªùng/th·ªã tr·∫•n ---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </select>
              </div>
              <div class=""row"">
                <label class=""lb-info""
                  >Th√¥n, ·∫•p<i>(s·ªë nh√†, ƒë∆∞·ªùng ph·ªë)</i>:
                </label>
                <input name=""Master.DiaChiCuThe"" type=""text"" class=""infoma"" />
              </div>
            </div>
          </div>
          <div class=""row"">
            <label class=""lb-info"">S·ªë ƒëi·ªán tho·∫°i: </label>
            <input name=""Master.Sdt"" type=""text"" class=""infoma"" />
          </div>
          <div class=""row"">
            <label class=""lb-info"">Email: </label>
            <input name=""Master.Email"" type=""text"" class=""infoma"" />
          </div>
          <div class=""loaihinh"">
            <label>Lo·∫°i h√¨nh kinh t·∫ø</label>

            <div class=""checkbox-tt"">
              <label> 1.Kinh t·∫ø nh√† n∆∞·ªõc</label>
              <label> 2.Kinh t·∫ø ngo√†i nh√† n∆∞·ªõc</label>
              <label> 3.Kinh t·∫ø c√≥ v·ªën ƒë·∫ßu t∆∞ tr·ª±c ti·∫øp n∆∞·ªõc ngo√†i</label>
            </div>
           ");
                WriteLiteral(@" <div class=""checkbox"">
              <input type=""radio"" name=""Master.MaLh"" value=""Kinh t·∫ø nh√† n∆∞·ªõc"" />
              <input 
                type=""radio""
                name=""Master.MaLh""
                value=""Kinh t·∫ø ngo√†i nh√† n∆∞·ªõc""
              />
              <input
                type=""radio""
                name=""Master.MaLh""
                value=""Kinh t·∫ø c√≥ v·ªën ƒë·∫ßu t∆∞ tr·ª±c ti·∫øp n∆∞·ªõc ngo√†i""
              />
            </div>
          </div>
          <div class=""nganhKD"">
            <div class=""row"">
              <label");
                BeginWriteAttribute("for", " for=\"", 9123, "\"", 9129, 0);
                EndWriteAttribute();
                WriteLiteral(@">Ng√†nh ho·∫°t ƒë·ªông kinh doanh</label>
              <div class=""MNHD row"">
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
                <input
                  type=""text""
                  maxlength=""1""
                  size=""1""
                  class=""text-center MN""
                />
              </div>
              <label");
                BeginWriteAttribute("for", " for=\"", 10137, "\"", 10143, 0);
                EndWriteAttribute();
                WriteLiteral(@">T√™n ng√†nh HƒêKD:</label>
              <input type=""text"" readonly class=""infoma-nganh"" style=""width: 35%;""/>
            </div>
          </div>    
        </div>
        <div class=""form-group bg-primary"">
          <h5><b>B. K·∫æT QU·∫¢ HO·∫†T ƒê·ªòNG KINH DOANH</b></h5>
        </div>
        <table class=""table table-bordered"">
          <thead>
            <tr class=""text-center"">
              <th style=""width:30%;""><b>T√™n ch·ªâ ti√™u</b></th>
              <th style=""width:25%;"" class=""NganhCM""><b>Ng√†nh ch·ªçn m·∫´u</b></th>
              <th style=""width:15%;""><b>Th√°ng th·ª±c hi·ªán ");
#nullable restore
#line 338 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                                   Write(getThangNamTruoc());

#line default
#line hidden
#nullable disable
                WriteLiteral("</b></th>\r\n              <th style=\"width:15%;\"><b>D·ª± t√≠nh ");
#nullable restore
#line 339 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                           Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 339 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                                       Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(" </b></th>\r\n              <th style=\"width:15%;\" class=\"text-uppercase\">\r\n                <b>C·ªòNG D·ªíN T·ª™ ƒê·∫¶U NƒÇM ƒê·∫æN CU·ªêI TH√ÅNG ");
#nullable restore
#line 341 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                                 Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 341 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                                                             Write(getNam());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</b>
              </th>
            </tr>
          </thead>
          <tbody id=""table-data1_4"">
            <tr class=""text-center"">
              <td></td>
              <td></td>
              <td colspan=""3""><b>ƒê∆°n v·ªã t√≠nh: Tri·ªáu ƒë·ªìng</b></td>
            </tr>
            <tr class=""text-center"">
              <td>A</td>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
            <tr>
              <td>1. T·ªïng doanh thu</td>
              <td></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+"" id=""ThthangTruoc0"" oninput=""changeThthangTruoc(0)"" name=""Detail[0].ThthangTruoc""
                class=""infoma infomal"" readonly /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+"" id=""DuTinh0"" oninput=""changeDuTinh(0)"" name=""Detail[0].DuTinh"" class=""infoma infomal""
                readonly /></td>
              <td><input type=""text"" pattern=""[0-9,.\-$]+"" id=""TongCongDon0"" name=""Detail[0].Ton");
                WriteLiteral(@"gCongDon"" class=""infoma infomal"" readonly /></td>
            </tr>
            <tr>
              <td>2. Doanh thu thu·∫ßn [NG√ÄNH CH·ªåN M·∫™U]</td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
            </tr>
            <tr>
              <td>3. Tr·ªã gi√° v·ªën nh√† ƒë·ªÉ ·ªü ƒë√£ b√°n</td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
            </tr>
            <tr>
              <td>
                4. Tr·ªã gi√° v·ªën nh√†, c√¥ng tr√¨nh kh√¥ng ƒë·ªÉ ·ªü v√† b·∫•t ƒë·ªông s·∫£n kh√°c
                ƒë√£ b√°n (Ch·ªâ hi·ªÉn th·ªã khi m√£ ng√†nh ch·ªçn m·∫´u l√† 68103)
              </td>
              <td><input type=""text"" class=""infoma"" /></td>
       ");
                WriteLiteral(@"       <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
            </tr>
            <tr>
              <td>
                5. Chi ph√≠ hoa h·ªìng cho ƒë·∫°i l√Ω x·ªï s·ªë (Ch·ªâ hi·ªÉn th·ªã khi m√£ ng√†nh
                ch·ªçn m·∫´u l√† 92)
              </td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
            </tr>
            <tr>
              <td>
                6. Chi ph√≠ tr·∫£ th∆∞·ªüng x·ªï s·ªë (Ch·ªâ hi·ªÉn th·ªã khi m√£ ng√†nh ch·ªçn m·∫´u
                l√† 92)
              </td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""infoma"" /></td>
              <td><input type=""text"" class=""in");
                WriteLiteral(@"foma"" /></td>
            </tr>
          </tbody>
        </table>
        <div class=""form-group bg-primary"">
          <h5><b>C. C√ÅC Y·∫æU T·ªî ·∫¢NH H∆Ø·ªûNG ƒê·∫æN HO·∫†T ƒê·ªòNG KINH DOANH</b></h5>
        </div>
        <div class=""form-group"">
          <label");
                BeginWriteAttribute("for", " for=\"", 14316, "\"", 14322, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n            >Y·∫øu t·ªë n√†o sau ƒë√¢y ·∫£nh h∆∞·ªüng ƒë·∫øn ho·∫°t ƒë·ªông kinh doanh c·ªßa ƒë∆°n v·ªã\r\n            trong th√°ng ");
#nullable restore
#line 419 "D:\ProjectC#\Cosis\Cosis\Views\Form1_4\Index.cshtml"
                   Write(getThang());

#line default
#line hidden
#nullable disable
                WriteLiteral("</label\r\n          >\r\n          <div class=\"YTAH\">\r\n            <div class=\"YTAH-tt\">\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14546, "\"", 14552, 0);
                EndWriteAttribute();
                WriteLiteral(">1. Nhu c·∫ßu th·ªã tr∆∞·ªùng</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14605, "\"", 14611, 0);
                EndWriteAttribute();
                WriteLiteral(">2. D·ªãch b·ªánh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14655, "\"", 14661, 0);
                EndWriteAttribute();
                WriteLiteral(">3. Th·ªùi ti·∫øt</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14705, "\"", 14711, 0);
                EndWriteAttribute();
                WriteLiteral(">4. ·∫¢nh h∆∞·ªüng m√πa v·ª•</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14762, "\"", 14768, 0);
                EndWriteAttribute();
                WriteLiteral(">5. Thay ƒë·ªïi nh√¢n s·ª±</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14819, "\"", 14825, 0);
                EndWriteAttribute();
                WriteLiteral(">6. Thay ƒë·ªïi kƒ© thu·∫≠t/c√¥ng ngh·ªá/ph∆∞∆°ng ti·ªán</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14899, "\"", 14905, 0);
                EndWriteAttribute();
                WriteLiteral(">7. Ngu·ªìn v·ªën kinh doanh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 14960, "\"", 14966, 0);
                EndWriteAttribute();
                WriteLiteral(">8. Thay ƒë·ªïi ƒë·ªãa ƒëi·ªÉm/th·ªã tr∆∞·ªùng kinh doanh</label>\r\n              <label");
                BeginWriteAttribute("for", " for=\"", 15040, "\"", 15046, 0);
                EndWriteAttribute();
                WriteLiteral(@">9. L√Ω do kh√°c: ghi r√µ</label>
            </div>
            <div class=""YTAH-check"">
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong0"" value=""01"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong1"" value=""02"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong2"" value=""03"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong3"" value=""04"" />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong4"" value=""05"" />
              <input
                type=""checkbox""
                name=""DanhSachNhanToAnhHuong5""
                value=""06""
              />
              <input type=""checkbox"" name=""DanhSachNhanToAnhHuong6"" value=""07"" />
              <input
                type=""checkbox""
                name=""DanhSachNhanToAnhHuong7""
                value=""08""
              />
              <input type=""checkbox"" id=""YT9""");
                BeginWriteAttribute("value", " value=\"", 15978, "\"", 15986, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
            </div>
          </div>
          <div class=""YTAH9"">
            <textarea
              class=""form-control""
              rows=""1""
              id=""comment""
              name=""NhanToThu9.NoiDung""
              disabled
            ></textarea>
          </div>
        </div>
        <div class=""form-group uname-info"">
          <div class=""row"">
            <label class=""uname-lb"">H·ªç t√™n ng∆∞·ªùi tr·∫£ l·ªùi:</label>
            <input required type=""text"" name=""Master.TenNguoiTraLoi""");
                BeginWriteAttribute("id", " id=\"", 16506, "\"", 16511, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"infoma\" />\r\n          </div>\r\n          <div class=\"row\">\r\n            <label class=\"uname-lb\">S·ªë ƒëi·ªán tho·∫°i:</label>\r\n            <input required type=\"text\" name=\"Master.SdtnguoiTraLoi\"");
                BeginWriteAttribute("id", " id=\"", 16707, "\"", 16712, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"infoma\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"group-btn\" style=\"justify-content: end;\">\r\n          <select name=\"loai\" style=\"margin-right:10px\">\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de238249", async() => {
                    WriteLiteral("Ch·ªçn file c·∫ßn xu·∫•t");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de239499", async() => {
                    WriteLiteral("Xu·∫•t File PDF");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de240744", async() => {
                    WriteLiteral("Xu·∫•t File Excel");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n              ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df82e4ad50951f3beec66369c21a889889da9de241991", async() => {
                    WriteLiteral("Xu·∫•t c·∫£ 2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n          </select>\r\n          <button type=\"submit\" value=\"false\" class=\"btn btn-primary\">L∆∞u</button>\r\n        </div>\r\n      ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
      <div class=""form-QLTT"">
        <div class=""head-group"">
          <div class=""title text-center"">
            <h5 class=""title-first""><b>DANH S√ÅCH C∆† S·ªû</b></h5>
            <label class=""title-last""
              ><i>Nh·∫•n v√†o d√≤ng c∆° s·ªü ƒë·ªÉ nh·∫≠p tin</i></label
            >
          </div>
          <div class=""group-radio-btn row"">
            <div class=""check-form"">
              <i class=""bi bi-circle-fill"" style=""color: rgb(0, 160, 255)""></i>
              <label class=""text-primary"">ƒê√£ ƒëi·ªÅu tra</label>
            </div>
            <div class=""check-form"" style=""margin-left: 5px"">
              <i class=""bi bi-circle-fill"" style=""color: white""></i>
              <label>Ch∆∞a ƒëi·ªÅu tra</label>
            </div>
            <div class=""check-form"" style=""margin-left: 5px"">
              <i class=""bi bi-circle-fill"" style=""color: rgb(215, 70, 0)""></i>
              <label class=""text"">Kh√¥ng ƒëi·ªÅu tra</label>
            </div>
          </div>
        </div>
        <table i");
            WriteLiteral(@"d=""example"" class=""table table-bordered table-hover"">
          <thead>
            <tr class=""text-center tab-title"">
              <th class=""th1"">ƒêi·ªÅu tra</th>
              <th class=""th2"">M√£ ƒêB</th>
              <th class=""th3"">C∆° s·ªü s·ªë</th>
              <th class=""th4"">T√™n c∆° s·ªü</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>a575769898</td>
              <td>c</td>
              <td>b</td>
              <td>d</td>
            </tr>
             <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
         ");
            WriteLiteral(@"     <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
            ");
            WriteLiteral(@"             <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>
                         <tr>
              <td>1</td>
              <td>2</td>
              <td>3</td>
              <td>4</td>
            </tr>

          </tbody>
        </table>
      </div>

<script type=""text/javascript"">
    /* var citis = document.getElementById(""city"");
var districts = document.getElementById(""district"");
var wards = document.getElementById(""ward"");
var Parameter = {
  url: ""https://localhost:44358/assets/DiaChi.json"", 
  method: ""GET"", 
  responseType: ""application/json"", 
};
var promise = axios(Parameter);
promise.then(function (result) {
  renderCity(result.data);
});

function renderCity(data) {
  for (const x of data) {
    citis.options[citis.options.length] = new Option(x.Name, x.Id);
  }
  citis.onchange = function () {
    district.length = 1;
    ward.length = 1;
    if(this.value != """"){
      cons");
            WriteLiteral(@"t result = data.filter(n => n.Id === this.value);

      for (const k of result[0].Districts) {
        district.options[district.options.length] = new Option(k.Name, k.Id);
      }
    }
  };
  district.onchange = function () {
    ward.length = 1;
    const dataCity = data.filter((n) => n.Id === citis.value);
    if (this.value != """") {
      const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

      for (const w of dataWards) {
        wards.options[wards.options.length] = new Option(w.Name, w.Id);
      }
    }
  };
} */

$('.infomal').on('blur', function() {
    if(checkNumber(this.value)){
        const value = this.value.replace(/,/g, '');
        this.value = parseFloat(value).toLocaleString('en-US', {
        style: 'decimal',
            maximumFractionDigits: 2,
            minimumFractionDigits: 2
            })
    }
});

    function changeThthangTruoc(tt){
        var value  = getValue($('#ThthangTruoc'+tt).val());
        if(check");
            WriteLiteral(@"Number(value)){
            var stt = $('#stt'+tt).val();        
            var mst = $('#MST1').val();
            var duTinh = $('#DuTinh'+tt).val();
            $.ajax({
                type: 'POST',
                url: '/get-tong',
                data: ""mast="" + mst + ""&stt=""+stt+""&thangTrc=""+value+""&duTinh=""+duTinh,
                success: function (result) {
                    $('#TongCongDon'+tt).val(
                        parseFloat(result).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
                    );
                    changeCongDon(result,tt);
                },
               error: function (result) {
               alert('M√£ s·ªë thu·∫ø kh√¥ng t·ªìn t·∫°i!');
             }
            });
          }
    var Tong = 0;
    var valueStrStt = String($('input#stt'+tt).val());
    //console.log(valueStrStt);
    if (valueStr");
            WriteLiteral(@"Stt.includes('2._') == true) {
      $('input[id*=""stt""]').each(function () {
        var stringID = $(this).val();
        var strSTT = $(this).attr('id');
        strSTT = strSTT.substring(3,strSTT.length);
        if (stringID.includes(""2._"") == true) {
            Tong += getValue($('#ThthangTruoc'+strSTT).val());
        }
      });
      $(""#ThthangTruoc0"").val(parseFloat(Tong).toLocaleString('en-US', {
        style: 'decimal',
        maximumFractionDigits: 2,
        minimumFractionDigits: 2
      }));
    }

    }
    function changeDuTinh(tt){
        var value = getValue($('#DuTinh'+tt).val());
        if((!isNaN(value) && $('#DuTinh'+tt).val() === '' + value)){
            var stt = $('#stt'+tt).val();        
            var mst = $('#MST1').val();
            var duTinh = $('#ThthangTruoc'+tt).val();
            $.ajax({
                type: 'POST',
                url: '/get-tong',
                data: ""mast="" + mst + ""&stt=""+stt+""&thangTrc=""+duTinh+""&duTinh=""+value");
            WriteLiteral(@",
                success: function (result) {
                      $('#TongCongDon'+tt).val(
                        parseFloat(result).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
                    );
                    changeCongDon(result,tt);
                },
               error: function (result) {
               alert('M√£ s·ªë thu·∫ø kh√¥ng t·ªìn t·∫°i!');
             }
            });
          }
          var Tong = 0;
    var valueStrStt = String($('input#stt'+tt).val());
    if (valueStrStt.includes('2._') == true) {
      $('input[id*=""stt""]').each(function () {
        var stringID = $(this).val();
        var strSTT = $(this).attr('id');
        strSTT = strSTT.substring(3,strSTT.length);
        //console.log(""cutStrr""+strSTT);
        if (stringID.includes(""2._"") == true) {
            Tong += getValue($('#DuTinh'+strSTT).val");
            WriteLiteral(@"());
        }
      });
      $(""#DuTinh0"").val(
            parseFloat(Tong).toLocaleString('en-US', {
                        style: 'decimal',
                        maximumFractionDigits: 2,
                        minimumFractionDigits: 2
                      })
            );
    }
    }
    
    function changeCongDon(result,tt){
    var Tong = 0;
    var valueStrStt = String($('input#stt'+tt).val());
    if (valueStrStt.includes('2._') == true) {
      $('input[id*=""stt""]').each(function () {
        var stringID = $(this).val();
        var strSTT = $(this).attr('id');
        strSTT = strSTT.substring(3,strSTT.length);
        if (stringID.includes(""2._"") == true) {
            Tong += getValue($('#TongCongDon'+strSTT).val());
        }
      });
      //$(""#TongCongDon0"").val(Tong);
      $(""#TongCongDon0"").val(parseFloat(Tong).toLocaleString('en-US', {
        style: 'decimal',
        maximumFractionDigits: 2,
        minimumFractionDigits: 2
      })
      );
 ");
            WriteLiteral("   }\r\n    }\r\n    \r\n    function checkNumber(str) {\r\n        return /[0-9,.\\-$]+/.test(str);\r\n    }\r\n    function getValue(str){\r\n       return Number(str.replace(/[^0-9.-]+/g,\"\"));\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Cosis.Models.PhieuDieuTra> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
